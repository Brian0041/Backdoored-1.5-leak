package com.backdoored.hacks.exploit;

import com.backdoored.utils.Utils;
import java.util.Map;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import java.util.Iterator;
import java.util.Set;
import com.backdoored.api.MojangWebApi;
import java.util.HashSet;
import net.minecraft.network.play.server.SPacketPlayerListItem;
import com.backdoored.event.PacketRecieved;
import com.backdoored.gui.CategoriesInit;
import java.util.UUID;
import java.util.HashMap;
import com.backdoored.hacks.BaseHack;

public class VanishDetector extends BaseHack
{
    private final HashMap<UUID, String> stillToAlert;
    
    public VanishDetector() {
        super("Vanish Detector", "Detect players in vanish", CategoriesInit.EXPLOIT);
        this.stillToAlert = new HashMap<UUID, String>();
    }
    
    @SubscribeEvent
    public void onReceivePacket(final PacketRecieved event) {
        if (event.packet instanceof SPacketPlayerListItem && this.getEnabled()) {
            final SPacketPlayerListItem packet = (SPacketPlayerListItem)event.packet;
            if (packet.func_179768_b() == SPacketPlayerListItem.Action.UPDATE_LATENCY) {
                final Set<UUID> vanishedPlayers = new HashSet<UUID>();
                for (final SPacketPlayerListItem.AddPlayerData playerData : packet.func_179767_a()) {
                    if (VanishDetector.mc.func_147114_u().func_175102_a(playerData.func_179962_a().getId()) == null) {
                        vanishedPlayers.add(playerData.func_179962_a().getId());
                    }
                }
                final Iterator<UUID> iterator2;
                UUID playerUUID;
                new Thread(() -> {
                    vanishedPlayers.iterator();
                    while (iterator2.hasNext()) {
                        playerUUID = iterator2.next();
                        this.stillToAlert.put(playerUUID, MojangWebApi.grabRealName(playerUUID.toString()));
                    }
                }, "Vanish thing idk").start();
            }
        }
    }
    
    public void onUpdate() {
        synchronized (this.stillToAlert) {
            for (final Map.Entry<UUID, String> player : this.stillToAlert.entrySet()) {
                Utils.printMessage("Player " + player.getValue() + " has gone into vanish (" + player.getKey() + ")", "gold");
            }
            this.stillToAlert.clear();
        }
    }
    
    private /* synthetic */ void lambda$onReceivePacket$0(final Set vanishedPlayers) {
        for (final UUID playerUUID : vanishedPlayers) {
            this.stillToAlert.put(playerUUID, MojangWebApi.grabRealName(playerUUID.toString()));
        }
    }
}
